var searchIndex = {};
searchIndex["bit_reverse"] = {"doc":"## Library Objective\nThis library provides a number of ways to compute the bit reversal of all primitive integers.\nThere are currently 3 different algorithms implemented: Bitwise, Parallel, and Lookup reversal.","items":[[8,"BitwiseReverse","bit_reverse","Computes bit reversal by going bit by bit and setting the reverse position bit for the output.",null,null],[10,"swap_bits","","Swaps the bits such that bit i is now bit N-i, where N is the length of the T in bits.",0,null],[8,"ParallelReverse","","Computes bit reversal by using a divide and conquer approach. Pairs of bits are swapped.\nThen neighboring bit pairs are swapped. Each time swapping the next largest group of bits.\nThis is done until the entire data has been bit reversed.",null,null],[10,"swap_bits","","Swaps the bits such that bit i is now bit N-i, where N is the length of the T in bits.",1,null],[8,"LookupReverse","","Computes bit reversal by using lookup table to translate a single byte into its reverse.\nFor multi-byte types, the byte order is swapped to complete the reversal.",null,null],[10,"swap_bits","","Swaps the bits such that bit i is now bit N-i, where N is the length of the T in bits.",2,null]],"paths":[[8,"BitwiseReverse"],[8,"ParallelReverse"],[8,"LookupReverse"]]};
initSearch(searchIndex);
